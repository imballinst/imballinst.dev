---
import cheerio from 'cheerio';
import { format } from 'date-fns';
import { Text } from '../components/Typography';

export interface Props {
  image: string;
  imageAlt: string;
  imageCaption: string;
  title: string;
  publishDate: string;
  author: string;
}

const TEXT_COLOR = 'text-gray-600 dark:text-gray-400';

function generateAnchorTag({ href, text }) {
  let icon = '';

  if (href.includes('https://')) {
    icon = `
<svg
  viewBox="0 0 24 24"
  class="ml-0.25 mb-2 h-3 w-3 inline-block"
  focusable="false"
  aria-hidden="true"
>
  <g
    fill="none"
    stroke="currentColor"
    stroke-linecap="round"
    stroke-width="2"
  >
    <path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path>
    <path d="M15 3h6v6"></path>
    <path d="M10 14L21 3"></path>
  </g>
</svg>
    `.trim();
  }

  return `
<a class="text-teal-600 dark:text-teal-300 hover:underline break-all inline-block" target="_blank" rel="noopener" href="${href}">
  ${text} ${icon}
</a>
  `.trim();
}

const { image, imageAlt, imageCaption, title, publishDate, author } =
  Astro.props;
const $ = cheerio.load(imageCaption);
let htmlString = '';

$('body').each((_i, el) => {
  for (const altChild of el.children) {
    if (altChild.type === 'tag' && altChild.name === 'a') {
      htmlString += generateAnchorTag({
        href: altChild.attribs.href,
        text: $(altChild).text()
      });
    } else {
      htmlString += altChild.data;
    }
  }
});
---

<header class="header">
  <Text as="h1" className="text-xl text-center my-0">{title}</Text>
  <Text as="p" className="text-center my-0" colorScheme="gray">
    Published at {format(new Date(publishDate), 'MMMM dd, yyyy, HH:mm O')}
  </Text>

  {image && (
    <figure class="resp-image-figure my-4">
      <span class="resp-image-wrapper">
        <a class="resp-image-link" href={image} target="_blank" rel="noopener">
          <img
            class="resp-image-image w-full"
            alt={imageAlt}
            src={image}
            loading="lazy"
          />
        </a>
      </span>
      <figcaption class="resp-image-figcaption text-sm text-center mt-1 text-gray-600 dark:text-gray-400">
        {htmlString}
      </figcaption>
    </figure>
  )}
</header>

<style>
  .header {
    flex: 1;
  }

  .resp-image-image {
    max-height: 450px;
    object-fit: cover;
  }
</style>
