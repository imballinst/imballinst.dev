---
import { readFileSync } from 'fs';

import BaseLayout from '../layouts/BaseLayout.astro';
import BlogPostHeader from '../components/BlogPostHeader.astro';

import { Text } from '../components/Typography';
import { Link } from '../components/Links';
import { FeedbackModal } from '../components/Modal';
import { EditIcon } from '../components/Icons';
import { TableOfContents } from '../components/TableOfContents/TableOfContents';
import { getAllHeadingIds } from '../helpers/markdown';

const { content = {} } = Astro.props;
const {
  title,
  description,
  publishDate,
  author,
  image,
  imageAlt,
  imageCaption,
  file
} = content;

const fileContent = readFileSync(file, 'utf-8')
const rootHeading = getAllHeadingIds(fileContent)

let slug = Astro.url.pathname;
if (slug.endsWith('/')) {
  slug = slug.slice(0, -1);
}

const editPage = `https://github.com/imballinst/imballinst.dev/edit/main/src/pages${slug}.md`;
---

<BaseLayout {title} {description} {image} currentMenu="/blog">
  <article class="content">
    <FeedbackModal slug={slug} client:visible>test</FeedbackModal>

    <BlogPostHeader
      {image}
      {imageAlt}
      {imageCaption}
      {title}
      {author}
      {publishDate}
    />

    <div class="mt-4">
      <div class="text-black dark:text-gray-200 py-4 border-y border-gray-200 dark:border-gray-600 space-y-4">
        <div class="text-2xl pl-4">Table of contents</div>

        <TableOfContents root={rootHeading} />
      </div>

      <slot />
    </div>

    <hr class="border-gray-200 dark:border-gray-600 mt-6" />

    <Text
      as="div"
      className="flex flex-col justify-between sm:flex-row mt-6 p-2"
    >
      <Link
        href={editPage}
        className="flex flex-row items-center ml-1"
        isExternal
        disableExternalIcon
      >
        <EditIcon className="h-4 w-4" />

        <span class="ml-2">Edit this post</span>
      </Link>
    </Text>
  </article>
</BaseLayout>

<script>
  const btn = document.getElementById('open-modal-btn');

  if (btn) {
    btn.addEventListener('click', () => {
      const evt = new Event('openmodal');
      window.dispatchEvent(evt);
    });
  }
</script>

<style>
  .content {
    display: flex;
    flex-direction: column;
  }
</style>
